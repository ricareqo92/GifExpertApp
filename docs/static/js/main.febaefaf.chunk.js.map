{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAkB5C,OACI,sBAAMC,SAXW,SAAEC,GACnBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAACS,GAAD,OAAWP,GAAX,mBAA0BO,OACzCN,EAAc,MAMlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAnBc,SAAEP,GACxBF,EAAeE,EAAEQ,OAAOF,a,QCNnBG,EAAc,SAAC,GAAqB,EAApBC,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAEpC,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMG,IAAMJ,IACvB,4BAAKA,Q,uBCPJK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbN,EAFa,iDAEoCO,UAAWF,GAF/C,sDAGCG,MAAMR,GAHP,cAGbS,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHhB,GAAIgB,EAAIhB,GACRC,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIC,cAAN,aAAE,EAAYC,iBAAiBhB,QAVvB,kBAcZY,GAdY,4CAAH,sDCIPK,EAAU,SAAC,GAAkB,IAAhBZ,EAAe,EAAfA,SAAe,ECDb,SAAC,GAAmB,IAAjBA,EAAgB,EAAhBA,SAAgB,EAEjBrB,mBAAS,CAC/B2B,KAAM,GACNO,SAAS,IAJ8B,mBAEpCC,EAFoC,KAE7BC,EAF6B,KAiB3C,OAVAC,qBAAW,WACPjB,EAASC,GACJiB,MAAM,SAAAC,GACCH,EAAS,CACLT,KAAMY,EACNL,SAAS,SAG1B,CAACb,IAEGc,EDd0BK,CAAcnB,GAAlCU,EAFwB,EAE7BJ,KAAaO,EAFgB,EAEhBA,QAErB,OACI,qCACI,6BAAMb,IAEJa,GAAW,mBAAGjB,UAAU,wCAAb,qBACb,qBAAKA,UAAU,YAAf,SACUc,EAAOF,KAAK,SAAAC,GAAG,OACb,cAAC,EAAD,eAEQA,GADEA,EAAIhB,aEZzB2B,EAAe,WAAO,IAAD,EAEMzC,mBAAS,CAAC,cAFhB,mBAEvB0C,EAFuB,KAEX3C,EAFW,KAI9B,OACI,qCACI,8CACA,cAAC,EAAD,CAAaA,cAAgBA,IAC7B,uBAEA,6BAEQ2C,EAAWb,KAAK,SAACR,EAAUsB,GAAX,OACZ,cAAC,EAAD,CAEItB,SAAWA,GADNsB,Y,MCXjCC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.febaefaf.chunk.js","sourcesContent":["import React, { useState  } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        setInputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = ( e ) => {\r\n        e.preventDefault();\r\n\r\n        if ( inputValue.trim().length > 2 ) {\r\n            setCategories( (cats) => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>  \r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","import React from 'react';\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    );\r\n}","export const getGifs = async( category ) => {\r\n        \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&api_key=XBoolisQmOHe3AEQ3G8GVMxlIMJZsUi9`;\r\n    const resp =  await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}","import React from 'react';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n    return (\r\n        <>\r\n            <h3>{ category }</h3>\r\n\r\n            { loading && <p className=\"card animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n                    { images.map( img  => \r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            {...img}\r\n                        />\r\n                    )}\r\n            </div> \r\n        </>\r\n    );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = ( {category } ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect( () => {\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    });\r\n                })\r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch'])\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories } />\r\n            <hr/>  \r\n            \r\n            <ol>\r\n                {\r\n                    categories.map( (category, i) => \r\n                        <GifGrid \r\n                            key={i}\r\n                            category={ category }\r\n                        />\r\n                    )\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}